(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))d(e);new MutationObserver(e=>{for(const a of e)if(a.type==="childList")for(const m of a.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&d(m)}).observe(document,{childList:!0,subtree:!0});function t(e){const a={};return e.integrity&&(a.integrity=e.integrity),e.referrerPolicy&&(a.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?a.credentials="include":e.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function d(e){if(e.ep)return;e.ep=!0;const a=t(e);fetch(e.href,a)}})();console.log("popup.js loaded successfully");const T={SCOPES:["https://www.googleapis.com/auth/spreadsheets"],SHEET_NAME:"Classification History",HEADERS:["Subject","URL","Timestamp"]},S={SPREADSHEET_ID:"spreadsheetId",PREVIOUS_SPREADSHEET_ID:"previousSpreadsheetId"},b=async()=>{try{return new Promise((s,n)=>{chrome.identity.getAuthToken({interactive:!0},t=>{chrome.runtime.lastError?n(chrome.runtime.lastError):s(t)})})}catch(s){throw console.error("Auth error:",s),s}};document.addEventListener("DOMContentLoaded",async()=>{const s=document.getElementById("classify");document.getElementById("view-responses");const n=document.getElementById("responses-list"),t=document.getElementById("responses-table"),d=async(c,o)=>{const i=new Date().toISOString();chrome.storage.sync.get("responses",r=>{const h=r.responses||[];h.push({subject:c,url:o,timestamp:i}),chrome.storage.sync.set({responses:h},()=>{console.log("Classification stored in Chrome storage:",{subject:c,url:o,timestamp:i})})});try{const{spreadsheetId:r}=await chrome.storage.sync.get("spreadsheetId");r&&(await L(c,o,i),console.log("Classification stored in Google Sheets"))}catch(r){console.error("Failed to store in Google Sheets:",r)}},e=c=>{chrome.storage.sync.get("responses",o=>{const i=o.responses||[];c>=0&&c<i.length&&(i.splice(c,1),chrome.storage.sync.set({responses:i},()=>{console.log(`Removed classification at index ${c}`),a()}))})},a=()=>{chrome.storage.sync.get("responses",c=>{const o=c.responses||[];if(n.innerHTML="",o.length===0){console.log("No past classifications found");const r=document.createElement("tr"),h=document.createElement("td");h.colSpan=4,h.textContent="No past classifications found.",h.style.textAlign="center",r.appendChild(h),n.appendChild(r),I();return}console.log("Displaying stored responses:",o),[...o].reverse().forEach((r,h)=>{const y=document.createElement("tr"),w=document.createElement("td");w.textContent=r.subject||"N/A",y.appendChild(w);const x=document.createElement("td"),f=document.createElement("a");f.href=r.url,f.textContent=r.url.length>50?r.url.substring(0,47)+"...":r.url,f.title=r.url,f.target="_blank",x.appendChild(f),x.style.wordWrap="break-word",x.style.maxWidth="200px",y.appendChild(x);const E=document.createElement("td");E.textContent=new Date(r.timestamp).toLocaleString(),y.appendChild(E);const p=document.createElement("td"),l=document.createElement("button");l.textContent="X",l.style.color="white",l.style.backgroundColor="black",l.style.border="none",l.style.cursor="pointer",l.style.padding="2px 5px",l.style.fontSize="12px",l.style.borderRadius="3px",l.addEventListener("click",()=>{e(o.length-1-h)}),p.appendChild(l),y.appendChild(p),n.appendChild(y)}),t.style.display="table",I()})},m=(c=!1,o)=>{const i=document.getElementById("result"),r=document.getElementById("extracted-text"),h=document.getElementById("source");o.disabled=!0,o.style.backgroundColor="#cccccc",o.innerText="Classifying...",i.innerText="",r.innerText="",r.style.display="none",h.innerText="",chrome.tabs.query({active:!0,currentWindow:!0},y=>{if(y.length===0){console.error("No active tab found"),o.disabled=!1,o.style.backgroundColor="",o.innerText=c?"Classify using Local Model":"Classify",i.innerText="No active tab found!";return}const w=new URL(y[0].url),x={target:{tabId:y[0].id},func:f=>{if(f==="twitter.com"||f==="x.com"){const p=document.querySelector('[data-testid="tweetText"]');return p?{text:p.innerText,source:"tweet"}:{text:"Unable to extract tweet text.",source:"tweet"}}const E=["#mw-content-text","main","article"];for(let p of E){const l=document.querySelector(p);if(l&&l.innerText.trim())return{text:l.innerText.substring(0,5e3),source:p}}return{text:document.body.innerText.substring(0,5e3),source:"all"}},args:[w.hostname]};chrome.scripting.executeScript(x,f=>{if(chrome.runtime.lastError){console.error("Error:",chrome.runtime.lastError),o.disabled=!1,o.style.backgroundColor="",o.innerText=c?"Classify using Local Model":"Classify",i.innerText=`Error: ${chrome.runtime.lastError.message}`;return}const E=f[0].result;h.innerText=`Extracted Text Source: ${E.source}`,r.style.display="block",r.innerText=E.text,chrome.runtime.sendMessage({action:"classifyPage",content:E.text,useLocalModel:c},p=>{if(o.disabled=!1,o.style.backgroundColor="",o.innerText=c?"Classify using Local Model":"Classify",p&&p.subject){i.innerHTML=`This page is classified as: <span>${p.subject}</span>`,d(p.subject,y[0].url);const l=document.getElementById("explanation");if(l&&l.remove(),p.explanation){const C=document.createElement("div");C.id="explanation",C.innerHTML=`<strong>Explanation:</strong> <em>${p.explanation}</em>`,C.style.marginBottom="20px";const v=document.getElementById("view-responses");v.parentNode.insertBefore(C,v)}}else i.innerText="Classification failed."})})})};s?s.addEventListener("click",()=>m(!1,s)):console.error("Classify button not found");const u=document.getElementById("view-responses");u?u.addEventListener("click",()=>{const c=u.querySelector(".caret"),o=u.querySelector(".expander-text"),i=document.getElementById("hexagon-visualization"),r=document.getElementById("responses-table");c.classList.contains("expanded")?(i.style.display="none",r.style.display="none",c.classList.remove("expanded"),o.textContent="View Past Classifications"):(a(),i.style.display="flex",r.style.display="table",c.classList.add("expanded"),o.textContent="Hide Past Classifications")}):console.error("Expander not found");const g=document.getElementById("classifyLocalButton");g?chrome.runtime.sendMessage({action:"checkModelAvailability"},c=>{c?(g.style.backgroundColor="",g.addEventListener("click",()=>m(!0,g))):(g.disabled=!0,g.style.backgroundColor="#cccccc",g.innerText="No local model available",g.style.cursor="not-allowed")}):console.error("Local classification button not found"),B()});const I=()=>{chrome.storage.sync.get("responses",s=>{const n=s.responses||[],t={Mathematics:{count:0,color:"#F9584B"},Science:{count:0,color:"#E6B710"},"Social Studies":{count:0,color:"#32B7A9"},"Language Arts":{count:0,color:"#4E62E0"}};n.forEach(e=>{t[e.subject]&&(t[e.subject].count+=1)});const d=document.getElementById("hexagon-visualization");d.innerHTML="";for(const[e,{count:a,color:m}]of Object.entries(t)){const u=document.createElement("div");u.className="hexagon",u.style.backgroundColor=a>0?m:"#ffffff",u.style.color=a>0?"white":"black",u.innerHTML=`
        <div class="hexagon-content">
          <p>${e}</p>
          <p>[${a}]</p>
        </div>
      `,d.appendChild(u)}})},A=async()=>{const s=await b(),n=await chrome.storage.sync.get("spreadsheetId");if(n.spreadsheetId)try{if((await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${n.spreadsheetId}`,{headers:{Authorization:`Bearer ${s}`}})).ok)return n.spreadsheetId}catch{console.log("Stored spreadsheet no longer accessible, creating new one")}const t=await fetch("https://sheets.googleapis.com/v4/spreadsheets",{method:"POST",headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json"},body:JSON.stringify({properties:{title:"Web Page Classifications"},sheets:[{properties:{title:T.SHEET_NAME}}]})});if(!t.ok)throw new Error("Failed to create spreadsheet");const{spreadsheetId:d}=await t.json();return await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${d}/values/${T.SHEET_NAME}!A1:C1?valueInputOption=RAW`,{method:"PUT",headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json"},body:JSON.stringify({values:[T.HEADERS]})}),await chrome.storage.sync.set({spreadsheetId:d}),d},L=async(s,n,t)=>{const d=await b();if(!d)throw new Error("Not authenticated");const{spreadsheetId:e}=await chrome.storage.sync.get("spreadsheetId");if(!e)throw new Error("No spreadsheet connected");const a=`${T.SHEET_NAME}!A:C`,m=`https://sheets.googleapis.com/v4/spreadsheets/${e}/values/${a}:append?valueInputOption=USER_ENTERED`,u=await fetch(m,{method:"POST",headers:{Authorization:`Bearer ${d}`,"Content-Type":"application/json"},body:JSON.stringify({values:[[s,n,new Date(t).toLocaleString()]]})});if(!u.ok){const g=await u.json();throw console.error("Sheet API Error:",g),new Error("Failed to append to Google Sheet")}return u.json()},B=()=>{const s=document.createElement("div");s.id="sheet-settings",s.style.marginTop="20px",s.style.borderTop="1px solid #ccc",s.style.paddingTop="10px",chrome.storage.sync.get("spreadsheetId",async n=>{if(n.spreadsheetId){const t=await b(),e=await(await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${n.spreadsheetId}?fields=properties.title`,{headers:{Authorization:`Bearer ${t}`}})).json();s.innerHTML=`
        <p>Connected to Sheet: ${e.properties.title}</p>
        <button id="disconnect-sheet">Disconnect Sheet</button>
        <button id="open-sheet">Open Sheet</button>
      `}else s.innerHTML=`
        <p>No Google Sheet connected</p>
        <button id="connect-sheet" style="background-color: #008000; &:hover { background-color: #006400; }">Connect to Google Sheets (beta)</button>
      `}),document.body.appendChild(s),document.addEventListener("click",async n=>{if(n.target.id==="connect-sheet")try{const{previousSpreadsheetId:t}=await chrome.storage.sync.get(S.PREVIOUS_SPREADSHEET_ID);if(t)try{const e=await b();if((await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${t}`,{headers:{Authorization:`Bearer ${e}`}})).ok){await chrome.storage.sync.set({[S.SPREADSHEET_ID]:t}),location.reload();return}}catch{console.log("Previous spreadsheet no longer accessible")}const d=await A();location.reload()}catch(t){console.error("Failed to connect sheet:",t)}else if(n.target.id==="disconnect-sheet"){const{spreadsheetId:t}=await chrome.storage.sync.get(S.SPREADSHEET_ID);t&&await chrome.storage.sync.set({[S.PREVIOUS_SPREADSHEET_ID]:t}),await chrome.storage.sync.remove(S.SPREADSHEET_ID),location.reload()}else if(n.target.id==="open-sheet"){const{spreadsheetId:t}=await chrome.storage.sync.get(S.SPREADSHEET_ID);t&&window.open(`https://docs.google.com/spreadsheets/d/${t}`)}})};
