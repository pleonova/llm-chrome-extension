(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))d(e);new MutationObserver(e=>{for(const c of e)if(c.type==="childList")for(const h of c.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&d(h)}).observe(document,{childList:!0,subtree:!0});function t(e){const c={};return e.integrity&&(c.integrity=e.integrity),e.referrerPolicy&&(c.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?c.credentials="include":e.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function d(e){if(e.ep)return;e.ep=!0;const c=t(e);fetch(e.href,c)}})();console.log("popup.js loaded successfully");const T={SCOPES:["https://www.googleapis.com/auth/spreadsheets"],SHEET_NAME:"Classification History",HEADERS:["Subject","URL","Timestamp"]},S={SPREADSHEET_ID:"spreadsheetId",PREVIOUS_SPREADSHEET_ID:"previousSpreadsheetId"},b=async()=>{try{return new Promise((s,o)=>{chrome.identity.getAuthToken({interactive:!0},t=>{chrome.runtime.lastError?o(chrome.runtime.lastError):s(t)})})}catch(s){throw console.error("Auth error:",s),s}};document.addEventListener("DOMContentLoaded",async()=>{const s=document.getElementById("classify"),o=document.getElementById("view-responses"),t=document.getElementById("responses-list"),d=document.getElementById("responses-table"),e=async(i,n)=>{const r=new Date().toISOString();chrome.storage.sync.get("responses",l=>{const u=l.responses||[];u.push({subject:i,url:n,timestamp:r}),chrome.storage.sync.set({responses:u},()=>{console.log("Classification stored in Chrome storage:",{subject:i,url:n,timestamp:r})})});try{const{spreadsheetId:l}=await chrome.storage.sync.get("spreadsheetId");l&&(await B(i,n,r),console.log("Classification stored in Google Sheets"))}catch(l){console.error("Failed to store in Google Sheets:",l)}},c=i=>{chrome.storage.sync.get("responses",n=>{const r=n.responses||[];i>=0&&i<r.length&&(r.splice(i,1),chrome.storage.sync.set({responses:r},()=>{console.log(`Removed classification at index ${i}`),h()}))})},h=()=>{chrome.storage.sync.get("responses",i=>{const n=i.responses||[];if(t.innerHTML="",n.length===0){console.log("No past classifications found");const r=document.createElement("tr"),l=document.createElement("td");l.colSpan=4,l.textContent="No past classifications found.",l.style.textAlign="center",r.appendChild(l),t.appendChild(r),v();return}console.log("Displaying stored responses:",n),n.forEach((r,l)=>{const u=document.createElement("tr"),f=document.createElement("td");f.textContent=r.subject||"N/A",u.appendChild(f);const x=document.createElement("td"),y=document.createElement("a");y.href=r.url,y.textContent=r.url.length>50?r.url.substring(0,47)+"...":r.url,y.title=r.url,y.target="_blank",x.appendChild(y),x.style.wordWrap="break-word",x.style.maxWidth="200px",u.appendChild(x);const E=document.createElement("td");E.textContent=new Date(r.timestamp).toLocaleString(),u.appendChild(E);const m=document.createElement("td"),a=document.createElement("button");a.textContent="X",a.style.color="white",a.style.backgroundColor="black",a.style.border="none",a.style.cursor="pointer",a.style.padding="2px 5px",a.style.fontSize="12px",a.style.borderRadius="3px",a.addEventListener("click",()=>{c(l)}),m.appendChild(a),u.appendChild(m),t.appendChild(u)}),d.style.display="table",v()})},p=(i=!1,n)=>{const r=document.getElementById("result"),l=document.getElementById("extracted-text"),u=document.getElementById("source");n.disabled=!0,n.style.backgroundColor="#cccccc",n.innerText="Classifying...",r.innerText="",l.innerText="",l.style.display="none",u.innerText="",chrome.tabs.query({active:!0,currentWindow:!0},f=>{if(f.length===0){console.error("No active tab found"),n.disabled=!1,n.style.backgroundColor="",n.innerText=i?"Classify using Local Model":"Classify",r.innerText="No active tab found!";return}const x=new URL(f[0].url),y={target:{tabId:f[0].id},func:E=>{if(E==="twitter.com"||E==="x.com"){const a=document.querySelector('[data-testid="tweetText"]');return a?{text:a.innerText,source:"tweet"}:{text:"Unable to extract tweet text.",source:"tweet"}}const m=["#mw-content-text","main","article"];for(let a of m){const w=document.querySelector(a);if(w&&w.innerText.trim())return{text:w.innerText.substring(0,5e3),source:a}}return{text:document.body.innerText.substring(0,5e3),source:"all"}},args:[x.hostname]};chrome.scripting.executeScript(y,E=>{if(chrome.runtime.lastError){console.error("Error:",chrome.runtime.lastError),n.disabled=!1,n.style.backgroundColor="",n.innerText=i?"Classify using Local Model":"Classify",r.innerText=`Error: ${chrome.runtime.lastError.message}`;return}const m=E[0].result;u.innerText=`Extracted Text Source: ${m.source}`,l.style.display="block",l.innerText=m.text,chrome.runtime.sendMessage({action:"classifyPage",content:m.text,useLocalModel:i},a=>{if(n.disabled=!1,n.style.backgroundColor="",n.innerText=i?"Classify using Local Model":"Classify",a&&a.subject){r.innerHTML=`This page is classified as: <span>${a.subject}</span>`,e(a.subject,f[0].url);const w=document.getElementById("explanation");if(w&&w.remove(),a.explanation){const C=document.createElement("div");C.id="explanation",C.innerHTML=`<strong>Explanation:</strong> <em>${a.explanation}</em>`,C.style.marginBottom="20px";const I=document.getElementById("view-responses");I.parentNode.insertBefore(C,I)}}else r.innerText="Classification failed."})})})};s?s.addEventListener("click",()=>p(!1,s)):console.error("Classify button not found"),o?o.addEventListener("click",()=>{console.log("View/Hide Past Classifications button clicked");const i=document.getElementById("hexagon-visualization"),n=document.getElementById("responses-table");o.textContent==="View Past Classifications"?(h(),i.style.display="flex",n.style.display="table",o.textContent="Hide Past Classifications"):(i.style.display="none",n.style.display="none",o.textContent="View Past Classifications")}):console.error("View Past Classifications button not found");const g=document.getElementById("classifyLocalButton");g?chrome.runtime.sendMessage({action:"checkModelAvailability"},i=>{i?(g.style.backgroundColor="",g.addEventListener("click",()=>p(!0,g))):(g.disabled=!0,g.style.backgroundColor="#cccccc",g.innerText="No local model available",g.style.cursor="not-allowed")}):console.error("Local classification button not found"),P()});const v=()=>{chrome.storage.sync.get("responses",s=>{const o=s.responses||[],t={Mathematics:{count:0,color:"#F9584B"},Science:{count:0,color:"#E6B710"},"Social Studies":{count:0,color:"#32B7A9"},"Language Arts":{count:0,color:"#4E62E0"}};o.forEach(e=>{t[e.subject]&&(t[e.subject].count+=1)});const d=document.getElementById("hexagon-visualization");d.innerHTML="";for(const[e,{count:c,color:h}]of Object.entries(t)){const p=document.createElement("div");p.className="hexagon",p.style.backgroundColor=c>0?h:"#ffffff",p.style.color=c>0?"white":"black",p.innerHTML=`
        <div class="hexagon-content">
          <p>${e}</p>
          <p>[${c}]</p>
        </div>
      `,d.appendChild(p)}})},A=async()=>{const s=await b(),o=await chrome.storage.sync.get("spreadsheetId");if(o.spreadsheetId)try{if((await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${o.spreadsheetId}`,{headers:{Authorization:`Bearer ${s}`}})).ok)return o.spreadsheetId}catch{console.log("Stored spreadsheet no longer accessible, creating new one")}const t=await fetch("https://sheets.googleapis.com/v4/spreadsheets",{method:"POST",headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json"},body:JSON.stringify({properties:{title:"Web Page Classifications"},sheets:[{properties:{title:T.SHEET_NAME}}]})});if(!t.ok)throw new Error("Failed to create spreadsheet");const{spreadsheetId:d}=await t.json();return await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${d}/values/${T.SHEET_NAME}!A1:C1?valueInputOption=RAW`,{method:"PUT",headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json"},body:JSON.stringify({values:[T.HEADERS]})}),await chrome.storage.sync.set({spreadsheetId:d}),d},B=async(s,o,t)=>{const d=await b();if(!d)throw new Error("Not authenticated");const{spreadsheetId:e}=await chrome.storage.sync.get("spreadsheetId");if(!e)throw new Error("No spreadsheet connected");const c=`${T.SHEET_NAME}!A:C`,h=`https://sheets.googleapis.com/v4/spreadsheets/${e}/values/${c}:append?valueInputOption=USER_ENTERED`,p=await fetch(h,{method:"POST",headers:{Authorization:`Bearer ${d}`,"Content-Type":"application/json"},body:JSON.stringify({values:[[s,o,new Date(t).toLocaleString()]]})});if(!p.ok){const g=await p.json();throw console.error("Sheet API Error:",g),new Error("Failed to append to Google Sheet")}return p.json()},P=()=>{const s=document.createElement("div");s.id="sheet-settings",s.style.marginTop="20px",s.style.borderTop="1px solid #ccc",s.style.paddingTop="10px",chrome.storage.sync.get("spreadsheetId",async o=>{if(o.spreadsheetId){const t=await b(),e=await(await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${o.spreadsheetId}?fields=properties.title`,{headers:{Authorization:`Bearer ${t}`}})).json();s.innerHTML=`
        <p>Connected to Sheet: ${e.properties.title}</p>
        <button id="disconnect-sheet">Disconnect Sheet</button>
        <button id="open-sheet">Open Sheet</button>
      `}else s.innerHTML=`
        <p>No Google Sheet connected</p>
        <button id="connect-sheet" style="background-color: #008000; &:hover { background-color: #006400; }">Connect to Google Sheets (beta)</button>
      `}),document.body.appendChild(s),document.addEventListener("click",async o=>{if(o.target.id==="connect-sheet")try{const{previousSpreadsheetId:t}=await chrome.storage.sync.get(S.PREVIOUS_SPREADSHEET_ID);if(t)try{const e=await b();if((await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${t}`,{headers:{Authorization:`Bearer ${e}`}})).ok){await chrome.storage.sync.set({[S.SPREADSHEET_ID]:t}),location.reload();return}}catch{console.log("Previous spreadsheet no longer accessible")}const d=await A();location.reload()}catch(t){console.error("Failed to connect sheet:",t)}else if(o.target.id==="disconnect-sheet"){const{spreadsheetId:t}=await chrome.storage.sync.get(S.SPREADSHEET_ID);t&&await chrome.storage.sync.set({[S.PREVIOUS_SPREADSHEET_ID]:t}),await chrome.storage.sync.remove(S.SPREADSHEET_ID),location.reload()}else if(o.target.id==="open-sheet"){const{spreadsheetId:t}=await chrome.storage.sync.get(S.SPREADSHEET_ID);t&&window.open(`https://docs.google.com/spreadsheets/d/${t}`)}})};
